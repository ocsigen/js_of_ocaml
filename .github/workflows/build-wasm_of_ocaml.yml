name: Build wasm_of_ocaml

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    env:
      WASM_OF_OCAML: true

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - "4.14"
          - "5.0"
          - "5.1"
          - "5.2"
          - ocaml-compiler.5.3.0~beta2
        separate_compilation:
          - true
        include:
          - os: macos-latest
            ocaml-compiler: "5.2"
            separate_compilation: true
          - os: ubuntu-latest
            ocaml-compiler: "4.14"
            separate_compilation: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout tree
        uses: actions/checkout@v4

      - name: Checkout Jane Street opam repository
        uses: actions/checkout@v4
        with:
          repository: janestreet/opam-repository
          ref: feaf8f831051fd5f316963b28efd728cf0b0eca1
          path: janestreet/opam-repository

      - name: Set-up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Set-up OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Set-up Binaryen
        uses: Aandreba/setup-binaryen@v1.0.0
        with:
          token: ${{ github.token }}

      - name: Pin faked binaryen-bin package
        # It's faster to use a cached version
        run: opam install --fake binaryen-bin

      - name: Checkout Jane Street packages
        run: |
          opam install opam-format ocamlfind dune graphics cmdliner sexplib0.v0.16.0
          opam exec -- ocaml tools/ci_setup.ml

      - name: Install dependencies
        run: opam install . --deps-only --with-test

      - name: Run tests
        if: ${{ matrix.separate_compilation }}
        run: opam exec -- dune build @runtest-wasm

      - name: Run tests with CPS effects
        if: ${{ matrix.ocaml-compiler >= '5.' && matrix.separate_compilation }}
        run: opam exec -- dune build @runtest-wasm --profile with-effects

      - name: Run Base tests
        if: ${{ matrix.ocaml-compiler < '5.' && matrix.separate_compilation }}
        working-directory: ./janestreet/lib/base
        run: opam exec -- dune runtest

      - name: Run Base bigstring tests
        if: ${{ matrix.ocaml-compiler < '5.' && matrix.separate_compilation }}
        working-directory: ./janestreet/lib/base_bigstring
        run: opam exec -- dune runtest

      - name: Run Core tests
        if: ${{ matrix.ocaml-compiler < '5.' && matrix.separate_compilation }}
        working-directory: ./janestreet/lib/core
        run: opam exec -- dune runtest

      - name: Run Bignum tests
        if: ${{ matrix.ocaml-compiler < '5.' && matrix.separate_compilation }}
        working-directory: ./janestreet/lib/bignum
        run: opam exec -- dune runtest

      - name: Run Bin_prot tests
        if: ${{ matrix.ocaml-compiler < '5.' && matrix.separate_compilation }}
        working-directory: ./janestreet/lib/bin_prot
        run: opam exec -- dune runtest

      - name: Run String_dict tests
        if: ${{ matrix.ocaml-compiler < '5.' && matrix.separate_compilation }}
        working-directory: ./janestreet/lib/string_dict
        run: opam exec -- dune runtest

      - name: Run Zarith tests
        if: ${{ matrix.ocaml-compiler < '5.' && matrix.separate_compilation }}
        working-directory: ./janestreet/lib/zarith_stubs_js
        run: opam exec -- dune runtest

      - name: Run Virtual_dom tests
        if: ${{ matrix.ocaml-compiler < '5.' && matrix.separate_compilation }}
        working-directory: ./janestreet/lib/virtual_dom
        run: opam exec -- dune runtest

      - name: Run Bonsai tests
        if: ${{ matrix.ocaml-compiler < '5.' && matrix.separate_compilation }}
        working-directory: ./janestreet/lib/bonsai
        run: opam exec -- dune runtest

      - name: Run Bonsai tests (release profile)
        if: ${{ ! matrix.separate_compilation }}
        working-directory: ./janestreet/lib/bonsai
        run: opam exec -- dune runtest --profile release
